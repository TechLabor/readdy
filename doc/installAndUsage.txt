--- Installation ---

The installation and usage requires the use of a unix terminal.
We strongly recoment the usage of a unix system. 
The usage of windows systems will require to install OpenMM under windows, 
and the manual compilation of the C++-code (instead of makefile usage) (not tested).
For unix systems terminal commands are provided.

The installation involves two parts:
First, the third party software OpenMM has to be installed on the system
Second, ReaDDyMM has to interface with this OpenMM distribution on the system.

Installation:
a) install OpenMM
    # for CMB @ FU Berlin: use "module load compiler/4.6.3 openmm/git" instead
    https://simtk.org/project/xml/downloads.xml?group_id=161
    # make sure that OpenMM runs properly
    # If you want to use GPU acceleration, sometimes specific compilers are required (GCC 4.6.3 works)

# prepare ReaDDyMM make execution
b) set system variables
        - set OPENMM_PLUGIN_DIR system variable (part of OpenMM instal)
        (export OPENMM_PLUGIN_DIR=$OpenMMDIR/lib/plugins)
        - set JAVA_HOME system variable
        ( e.g. export JAVA_HOME=/usr/lib/jvm/java-7-openjdk-amd64)
        - add your OpenMM library dircetory to the LD_LIBRARY_PATH system variable
        (e.g. export LD_LIBRARY_PATH=$OpenMMDIR/lib:$LD_LIBRARY_PATH
        or export LD_LIBRARY_PATH=$OPENMM_PLUGIN_DIR/../../lib:$LD_LIBRARY_PATH)
        (- for permanent setting, edit your .bashrc file)
# ReaDDyMM make execution
c)  # change directory to /lib
    cd /lib
    # run makefile
    make


--- Run first simulation ---
 # use template in /test/ReaDDyPaperReaDDyMM/
 # set parameters in the readdy simulation run script
d) edit /test/ReaDDyPaperReaDDyMM/_run/runSimulation.sh
        # edit the following line
        PROGRAMPATH=/path/to/your/ReaDDy/

e) edit ReaDDyMM specific parameter in /test/ReaDDyPaperReaDDyMM/ReaDDy_input/
        # in param_global.xml:
        # the diffusion timestep in OpenMM
        <dtOpenMM>1e-10</dtOpenMM>

    # Optional Parameters
        # in param_global.xml:
        # the CUDA device index, default 0
        <cudaDeviceIndex>0</cudaDeviceIndex>

        # in param_particles.xml
        # the number of dummy particles for the respective particle
        # default: 0
        # these particles are necessary since OpenMM can not add or remove particles
        # upon a reaction. Dummy particles are used to catch this.
        <numberOfDummyParticles>1234</numberOfDummyParticles>


f) run ReaDDyMM
    # for CMB @ FU Berlin: login into GPU node
    # for CMB @ FU Berlin: type "module load compiler/4.6.3 openmm/git"
    # change to test folder
    cd /test/ReaDDyPaperReaDDyMM/
    ./run.sh

